<!DOCTYPE html>
<html lang="en">
<%- include('common/head') %>

<body>
    <%- include('common/navbar') %>
    <%- include('common/banner', {title: 'Checkout', description: 'Confirm details and buy products.'}) %>

    <%- include ('partial/checkout', {
        items: proceedCheckOutObj.items,
    }) %>

    <%- include('common/footer') %>
    <%- include('common/scripts') %>
    <script src="https://unpkg.com/@trevoreyre/autocomplete-js"></script>

    <%# Vue app %>
    <script>
        let app = new Vue({
            el: "#checkout_form",
            data: {
                delivery_method: 'deliver',
                addr_line1: '<%= proceedCheckOutObj.delivery_info.addr_line1 %>',
                addr_line2: '<%= proceedCheckOutObj.delivery_info.addr_line2 %>',
                city: '<%= proceedCheckOutObj.delivery_info.city %>',
                postcode: '<%= proceedCheckOutObj.delivery_info.postcode %>',
                subtotal: '<%= proceedCheckOutObj.subtotal %>' - 0,
                delivery_charge: '<%= proceedCheckOutObj.delivery_info.delivery_charge %>' - 0,
                first_name: '<%= proceedCheckOutObj.delivery_info.first_name %>',
                last_name: '<%= proceedCheckOutObj.delivery_info.last_name %>',
                phone_number: '<%= proceedCheckOutObj.delivery_info.phone_number %>',
                email: '<%= proceedCheckOutObj.delivery_info.email %>',
                loggedIn: '<%= loggedIn %>' == 'true',
                delivery_days: '<%= proceedCheckOutObj.delivery_info.delivery_days %>',
                payment_method: 'card',
                terms_accepted: false,
                n_products: '<%= proceedCheckOutObj.items.length %>' - 0,
                errors: [],
                emailExists: false,
                cityExists: true,
            },
            methods: {
                createAutoComplete: function () {
                    setTimeout(function () {
                        new Autocomplete('#autocomplete', {
                            search: (input) => {
                                const url = `/api/cities?search=${encodeURI(input)}`;
                                return new Promise((resolve) => {
                                    fetch(url)
                                        .then((response) => response.json())
                                        .then((data) => {
                                            resolve(data);
                                        });
                                });
                            },
                            getResultValue: (result) => result.city,
                            onSubmit: (result) => {
                                app.city = result.city;
                                app.delivery_days = result.delivery_days;
                                app.delivery_charge = result.delivery_charge - 0;
                                app.cityCheck();
                            },
                        });
                    }, 500);

                },
                emailCheck: function (e) {
                    fetch('/api/email/' + this.email)
                        .then((response) => response.json())
                        .then((data) => {
                            this.emailExists = data.result;
                        });
                },
                cityCheck: function (e) {
                    if (this.delivery_method === 'deliver') {
                        if (this.city === '') return;
                        fetch('/api/city/' + this.city)
                            .then((response) => response.json())
                            .then((data) => {
                                this.cityExists = data.result;
                                if (this.cityExists) {
                                    this.delivery_days = data.data[0].delivery_days;
                                    this.delivery_charge = data.data[0].delivery_charge - 0;
                                } else {
                                    this.delivery_days = 'unknown';
                                    this.delivery_charge = 0;
                                }
                            });
                    }
                },
                checkForm: function (e) {
                    let addressValid = (
                        this.delivery_method === 'pickup' || (
                            this.addr_line1 && this.addr_line2 && this.city && this.postcode
                        )
                    );
                    let validMethod = this.delivery_method === 'deliver' || this.payment_method === 'card';

                    if (this.first_name && this.last_name && this.phone_number && this.email &&
                        phoneNumberRegex.test(this.phone_number) && emailRegex.test(this.email) &&
                        addressValid && this.terms_accepted && this.n_products && validMethod && this.cityExists
                    ) {
                        return true;
                    }

                    this.errors = [];
                    e.preventDefault();

                    if (!this.first_name) this.errors.push('First Name required.');
                    if (!this.last_name) this.errors.push('Last Name required.');
                    if (!this.phone_number) this.errors.push('Phone Number required.');
                    if (!phoneNumberRegex.test(this.phone_number)) this.errors.push('Phone Number format invalid.');
                    if (!this.email) this.errors.push('Email Address required.');
                    if (!emailRegex.test(this.email)) this.errors.push('Email Address format invalid.');
                    if (!addressValid) this.errors.push('Address fields incomplete.');
                    if (!validMethod) this.errors.push('Can\'t have store pickup with pay on delivery.');
                    if (!this.terms_accepted) this.errors.push('Accept terms and conditions.');
                    if (!this.n_products) this.errors.push('Must have atleast one product in the cart.');
                    if (!this.cityExists) this.errors.push('Invalid city selected.');
                }
            }
        });

        app.createAutoComplete();

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })
    </script>
</body>

</html>